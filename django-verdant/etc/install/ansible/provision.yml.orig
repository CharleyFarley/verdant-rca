---
- hosts: production
  user: ${user} 
  vars_files:
    - vars.yml
  gather_facts: false
  sudo: true

  tasks:

  - name: Create the djangoapps group
    group: name=djangoapps state=present
  - name: Create user
    user: name=${project_name} group=djangoapps shell="/bin/bash" state=present

  - name: Create the django directory
    file: state=directory path=${django_root} mode=2775 owner=root group=djangoapps
    
  - name: Create the ~/.ssh/directory for root
    file: state=directory path=/root/.ssh mode=0700 owner=root group=root
  - name: Copy SSH private key for root
    copy: src=files/keys/id_rsa dest=/root/.ssh/ mode=0600 owner=root group=root
  - name: Copy SSH public key for root
    copy: src=files/keys/id_rsa.pub dest=/root/.ssh/ mode=0644 owner=root group=root

  - name: Create the ~/.ssh/directory for ${project_name} user
    file: state=directory path=/home/${project_name}/.ssh mode=0700 owner=${project_name} group=djangoapps
  - name: Copy SSH private key for ${project_name} user
    copy: src=files/keys/id_rsa dest=/home/${project_name}/.ssh/ mode=0600 owner=${project_name} group=djangoapps
  - name: Copy SSH public key for ${project_name} user
    copy: src=files/keys/id_rsa.pub dest=/home/${project_name}/.ssh/ mode=0644 owner=${project_name} group=djangoapps

  - name: Install the required system packages
    apt: pkg=${item} state=installed update-cache=yes
    with_items: ${system_packages}
 
  - name: Install global python packages
    pip: name=${item} state=present use_mirrors=no
    with_items: ${python_packages}
 
  - name: Copy the nginx vhost 
    template: src=files/templates/nginx-vhost.conf.j2 dest=/etc/nginx/sites-enabled/${project_name}.conf
    notify:
    - restart nginx

  - name: Set up ssh-key for login as the deployment user
    authorized_key: user=${project_name} key="{{ lookup('file', '/Users/stewart/.ssh/id_rsa.pub') }}" manage_dir=no

  - name: Copy the git known_hosts keys to globally
    copy: src=files/keys/known_hosts dest=/etc/ssh/ssh_known_hosts owner=root group=root mode=0644 backup=yes

  - name: Check out the project git repo
    git: repo=${project_repo} dest=${project_root}
 
  - name: Set the ownership of the project root to the deployment user
    file: path=${project_root} state=directory recurse=yes owner=${project_name} group=djangoapps mode=2775

  - name: Create the virtualenvs directory
    file: path=${django_root}/virtualenvs state=directory owner=root group=djangoapps mode=2775

  - name: Create the virtualenv for the project
    command: /usr/local/bin/virtualenv ${django_root}/virtualenvs/${project_name}

  - name: Fix permissions on the virtualenv for the project
    file: path=${django_root}/virtualenvs/${project_name} state=directory recurse=yes owner=${project_name} group=djangoapps mode=2775

  - name: pip install requirements within the virtualenv
    pip: requirements=${project_root}/requirements.txt virtualenv=${django_path}/virtualenvs/${project_name}

  - name: Set up workon path for the deployment user
    lineinfile: dest=/home/${project_name}/.bashrc regexp="^export WORKON_HOME" line="export WORKON_HOME=${django_root}/virtualenvs"
  - name: Source virtualenvwrapper for the deployment user
    lineinfile: dest=/home/${project_name}/.bashrc regexp="^source /usr/local/bin/virtualenvwrapper.sh" line="source /usr/local/bin/virtualenvwrapper.sh"


